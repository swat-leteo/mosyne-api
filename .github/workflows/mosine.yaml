name: mosineAPI
on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testing
          POSTGRES_PORT: 5432
          POSTGRES_HOST: localhost
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: testing
      POSTGRES_PORT: 5432
      POSTGRES_HOST: localhost
      TESTING: true
      SECRET_JWT: test-secret
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.2
      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --output requirements.txt
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install aerich
      - name: Migrations
        run: |
          sudo rm -rf app/db/migrations/**
          aerich init -t app.db.settings.TORTOISE_ORM_CONFIG --location app/db/migrations
          aerich init-db
          aerich migrate
      - name: Test
        run: |
          pip install pytest
          pytest
  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    needs: test
    steps:
      - name: Initialize Google Cloud SDK
        uses: zxyle/publish-gae-action@master
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
          gae_variables: ${{ secrets.GAE_VARIABLES }}
          gae_config_path: ./../app.yaml
      - name: Deploy to Google App Engine
        run: |
          gcloud auth active-service-account ${{ secrets.GCP_SA_EMAIL }} --key-file=client-secret.json

          # Choose current project
          gcloud config set project ${{ secrets.PROJECT_ID }}

          # Deploy project
          gcloud -q app deploy app.yaml --promote
